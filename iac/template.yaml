Resources:
  ################################
  # Lambda and IAM
  ################################
  # meowAdvice function
  LambdaFunctionMeowAdvice:
    UpdateReplacePolicy: Retain
    Type: AWS::Lambda::Function
    DeletionPolicy: Retain
    Properties:
      MemorySize: 128
      Description: ''
      TracingConfig:
        Mode: PassThrough
      Timeout: 10
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      Handler: lambda_function.lambda_handler
      Code: ../functions/meowAdvice/
      Role: !GetAtt IAMRoleLFMeowAdvice.Arn
      FileSystemConfigs: []
      FunctionName: meowAdvice
      Runtime: python3.12
      PackageType: Zip
      LoggingConfig:
        LogFormat: Text
        LogGroup: /aws/lambda/meowAdvice
      Environment:
        Variables:
          DEEPL_AUTH_KEY: '{{resolve:ssm:/Test/DEEPL_AUTH_KEY}}'
          LINE_USER_ID: '{{resolve:ssm:/Test/LINE_USER_ID}}'
          GEMINI_API_KEY: '{{resolve:ssm:/Test/GEMINI_API_KEY}}'
          LINE_ACCESS_TOKEN: '{{resolve:ssm:/Test/LINE_ACCESS_TOKEN}}'
      EphemeralStorage:
        Size: 512
      Architectures:
        - x86_64

  # role for meowAdvice function
  IAMRoleLFMeowAdvice:
    UpdateReplacePolicy: Retain
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      Path: /service-role/
      ManagedPolicyArns:
        - !Ref IAMManagedPolicyLFMeowAdvice
      MaxSessionDuration: 3600
      RoleName: IAMRoleLFMeowAdvice
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
  IAMManagedPolicyLFMeowAdvice:
    UpdateReplacePolicy: Retain
    Type: AWS::IAM::ManagedPolicy
    DeletionPolicy: Retain
    Properties:
      ManagedPolicyName: IAMManagedPolicyLFMeowAdvice
      Path: /service-role/
      Description: ''
      Groups: []
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
            Action: logs:CreateLogGroup
            Effect: Allow
          - Resource:
              - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/meowAdvice:*
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
      Roles: []
      Users: []

  # findCatsGroup function
  LambdaFunctionFindCatsGroup:
    UpdateReplacePolicy: Retain
    Type: AWS::Lambda::Function
    DeletionPolicy: Retain
    Properties:
      MemorySize: 128
      Description: ''
      TracingConfig:
        Mode: PassThrough
      Timeout: 3
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      Handler: lambda_function.lambda_handler
      Code: ../functions/findCatsGroup/
      Role: !GetAtt IAMRoleLFFindCatsGroup.Arn
      FileSystemConfigs: []
      FunctionName: findCatsGroup
      Runtime: python3.12
      PackageType: Zip
      LoggingConfig:
        LogFormat: Text
        LogGroup: /aws/lambda/findCatsGroup
      RecursiveLoop: Terminate
      EphemeralStorage:
        Size: 512
      Architectures:
        - x86_64

  # role for findCatsGroup function
  IAMRoleLFFindCatsGroup:
    UpdateReplacePolicy: Retain
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      Path: /service-role/
      ManagedPolicyArns:
        - !Ref IAMManagedPolicyLFFindCatsGroup
      MaxSessionDuration: 3600
      RoleName: IAMRoleLFFindCatsGroup
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
  IAMManagedPolicyLFFindCatsGroup:
    UpdateReplacePolicy: Retain
    Type: AWS::IAM::ManagedPolicy
    DeletionPolicy: Retain
    Properties:
      ManagedPolicyName: IAMManagedPolicyLFFindCatsGroup
      Path: /service-role/
      Description: ''
      Groups: []
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
            Action: logs:CreateLogGroup
            Effect: Allow
          - Resource:
              - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/findCatsGroup:*
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
      Roles: []
      Users: []

  ################################
  # StateMachne
  ################################
  # statemachine GetMeowAdvicesFlow
  StateMachineGetMeowAdvicesFlow:
    UpdateReplacePolicy: Retain
    Type: AWS::StepFunctions::StateMachine
    DeletionPolicy: Retain
    Properties:
      DefinitionS3Location: ../statemachine/getMeowAdvicesFlow.asl.json
      DefinitionSubstitutions:
        LambdaFunctionMeowAdviceArn: !GetAtt LambdaFunctionMeowAdvice.Arn
        LambdaFunctionFindCatsGroupArn: !GetAtt LambdaFunctionFindCatsGroup.Arn
      EncryptionConfiguration:
        Type: AWS_OWNED_KEY
      LoggingConfiguration:
        IncludeExecutionData: false
        Level: 'OFF'
      StateMachineName: GetMeowAdvicesFlow
      RoleArn: !GetAtt IAMRoleSFGetMeowAdvicesFlow.Arn
      Tags: []
      StateMachineType: STANDARD
      TracingConfiguration:
        Enabled: false

  # role for GetMeowAdvicesFlow
  IAMRoleSFGetMeowAdvicesFlow:
    UpdateReplacePolicy: Retain
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      Path: /service-role/
      ManagedPolicyArns:
        - !Ref IAMManagedPolicyExecuteFunction
        - !Ref IAMManagedPolicyXray
      MaxSessionDuration: 3600
      RoleName: IAMRoleSFGetMeowAdvicesFlow
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: states.amazonaws.com

  IAMManagedPolicyExecuteFunction:
    UpdateReplacePolicy: Retain
    Type: AWS::IAM::ManagedPolicy
    DeletionPolicy: Retain
    Properties:
      ManagedPolicyName: IAMManagedPolicyExecuteFunction
      Path: /service-role/
      Description: Allow AWS Step Functions to invoke Lambda functions on your behalf
      Groups: []
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Resource:
              - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:meowAdvice:*
              - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:findCatsGroup:*
            Action:
              - lambda:InvokeFunction
            Effect: Allow
          - Resource:
              - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:meowAdvice
              - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:findCatsGroup
            Action:
              - lambda:InvokeFunction
            Effect: Allow
      Roles: []
      Users: []

  IAMManagedPolicyXray:
    UpdateReplacePolicy: Retain
    Type: AWS::IAM::ManagedPolicy
    DeletionPolicy: Retain
    Properties:
      ManagedPolicyName: IAMManagedPolicyXray
      Path: /service-role/
      Description: Allow AWS Step Functions to call X-Ray daemon on your behalf
      Groups: []
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Resource:
              - '*'
            Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
              - xray:GetSamplingRules
              - xray:GetSamplingTargets
            Effect: Allow
      Roles: []
      Users: []

  ################################
  # Scheduler
  ################################
  # scheduler
  SchedulerExecGetMeowAdvicesFlow:
    UpdateReplacePolicy: Retain
    Type: AWS::Scheduler::Schedule
    DeletionPolicy: Retain
    Properties:
      GroupName: default
      ScheduleExpression: cron(0 0 17 12 ? *)
      Target:
        Arn: !Ref StateMachineGetMeowAdvicesFlow
        RetryPolicy:
          MaximumEventAgeInSeconds: 86400
          MaximumRetryAttempts: 185
        RoleArn: !GetAtt IAMRoleEBScheduler.Arn
      Description: cats give advice.
      State: ENABLED
      FlexibleTimeWindow:
        Mode: 'OFF'
      ScheduleExpressionTimezone: Asia/Tokyo
      Name: ExecGetMeowAdvicesFlowScheduler

  IAMRoleEBScheduler:
    UpdateReplacePolicy: Retain
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      Path: /service-role/
      ManagedPolicyArns:
        - !Ref IAMManagedPolicyEBScheduler
      MaxSessionDuration: 3600
      RoleName: IAMRoleEBScheduler
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Condition:
              StringEquals:
                aws:SourceAccount: !Sub '${AWS::AccountId}'
            Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: scheduler.amazonaws.com

  IAMManagedPolicyEBScheduler:
    UpdateReplacePolicy: Retain
    Type: AWS::IAM::ManagedPolicy
    DeletionPolicy: Retain
    Properties:
      ManagedPolicyName: IAMManagedPolicyEBScheduler
      Path: /service-role/
      Description: ''
      Groups: []
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Resource:
              - !Sub arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:GetMeowAdvicesFlow
            Action:
              - states:StartExecution
            Effect: Allow
      Roles: []
      Users: []
